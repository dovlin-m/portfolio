// Justify-content
@each $breakpoints, $b in $breakpoints {
  @each $justify-content, $j in $justify-content {
    @media (min-width: $b) {
      .jc#{$breakpoints}#{$justify-content} {
        justify-content: $justify-content;
      }
    }
  }
}

// Flex-direction
@each $breakpoints, $b in $breakpoints {
  @each $direction, $d in $direction {
    @media (min-width: $b) {
      .flex#{$breakpoints}#{$direction} {
        flex-direction: $direction;
      }
    }
  }
}

// Flex
@each $breakpoints, $b in $breakpoints {
  @each $flex, $f in $flex {
    @media (min-width: $b) {
      .flex#{$breakpoints}#{$flex} {
        flex-#{$flex}: $flex;
      }
    }
  }
}

// Gap
@each $breakpoints, $b in $breakpoints {
  @for $i from 0 through 24 {
    @media (min-width: $b) {
      .gap#{$breakpoints}#{$i} {
        gap: $i * 4px;
      }
    }
  }
}

// Order
@each $breakpoints, $b in $breakpoints {
  @for $i from 0 through 12 {
    @media (min-width: $b) {
      .order#{$breakpoints}#{$i} {
        order: $i;
      }
    }
  }
}

.flex-grow-1 {
  flex-grow: 1;
}

.align-items-center {
  align-items: center;
}

.align-items-stretch {
  align-items: stretch;
}

.align-items-start {
  align-items: start;
}

.align-items-end {
  align-items: end;
}
